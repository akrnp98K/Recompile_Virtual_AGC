C/ From PDF p. 176 of "Programming in HAL/S".

  P:
  PROGRAM;
     STRUCTURE SUPER_VECTOR:
        1 V VECTOR,
        1 STATUS BOOLEAN,
        1 TIMETAG SCALAR;
     STRUCTURE STATEVEC:
        1 POSITION SUPER_VECTOR-STRUCTURE,
        1 VELOCITY SUPER_VECTOR-STRUCTURE,
        1 ACCEL SUPER_VECTOR-STRUCTURE;
     DECLARE STATE STATEVEC-STRUCTURE;
     STRUCTURE S2:
        1 STATE STATEVEC-STRUCTURE,
        1 ATTITUDE_INFO ARRAY(3) VECTOR DOUBLE;
     DECLARE STATE2 S2-STRUCTURE;
     REPLACE TEST_DATA BY "1";
     DECLARE CYCLE INTEGER INITIAL(0);
     DECLARE DELTA_T CONSTANT(1 / 10);					/*TIME BETWEEN SAMPLES*/
     DECLARE INTEGRATE PROCEDURE;
     DECLARE READ_ACC FUNCTION SUPER_VECTOR-STRUCTURE;
E                   +        +
M    STATE2.STATE.ACCEL = READ_ACC(17);

C  ASSUME THAT 17 SELECTS THE CORRECT ACCELEROMETER

E                                  +                           +
M    CALL INTEGRATE(STATE2.STATE.ACCEL) ASSIGN(STATE2,STATE.VELOCITY);
E                                   +                             +
M    CALL INTEGRATE(STATE2.STATE.VELOCITY) ASSIGN(STATE2.STATE.POSITION);
     CYCLE = CYCLE + 1;
E                                      +
M    FILE(TEST_DATA, CYCLE) = STATE2.STATE;				/*SAVE FOR POST PROCESSING*/
  INTEGRATE:
  PROCEDURE(INPUT) ASSIGN(OUTPUT);
     DECLARE SUPER_VECTOR-STRUCTURE,
     		INPUT, OUTPUT;
E               .
M    IF INPUT.STATUS = FALSE THEN
        DO;
E                   .
M         OUTPUT.STATUS = FALSE;
  	   RETURN;
 	END;
     OUTPUT.TIMETAG = INPUT.TIMETAG;
E           -          -         -
M    OUTPUT.V = OUTPUT.V + INPUT.V DELTA_T;
  CLOSE INTEGRATE;
  CLOSE P;
  
  